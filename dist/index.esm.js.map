{"version":3,"file":"index.esm.js","sources":["../src/parse.js","../src/fetch.js"],"sourcesContent":["/**\n * SSE 文本解析\n * @param {string} chunk - decode 后的 SSE 格式数据块\n * @param {Function} callback\n * @param {Object} instance\n */\nfunction eventsourceParser(chunk, callback, options = {}) {\n  let message = {};\n  const {\n    instance = eventsourceParser,\n    parseJson = true\n  } = options;\n  const buffer = (instance.buffer || '') + chunk;\n  const lines = buffer.split('\\n');\n\n  // SSE 规范要求每个事件使用空行即 \\n\\n 进行分割\n  // 移除最后一行，若事件完整则为空行，若事件不完整则留作下次处理\n  instance.buffer = lines.pop();\n\n  // 解析原始数据\n  lines.forEach((item, index) => {\n    // 空行表示一个完整事件的结束\n    if (item.trim() === '') {\n      // 是否自动解析 JSON\n      if (parseJson) {\n        try {\n          message.data = JSON.parse(message.data);\n        } catch(e) {}\n      }\n      callback?.(message, index); // 返回数据\n      message = {}; // 重置事件返回的数据\n    } else {\n      const fieleLength = item.indexOf(':');\n      const field = item.substring(0, fieleLength);\n      const value = item.substring(fieleLength + 1);\n\n      // 处理数据\n      if (field.trim()) {\n        switch (field) {\n          case 'data':\n            message.data = value;\n            break;\n          default: // id, event, retry\n            message[field] = /^\\d+$/.test(value) ? parseInt(value) : value;\n        }\n      }\n    }\n  });\n};\n\nexport default eventsourceParser;\n","import eventsourceParser from './parse.js';\n\nclass FetchEventSource {\n  constructor() {\n    this.controller = new AbortController();\n  }\n\n  /**\n   * 发起请求\n   * @param {string} url\n   * @param {Object} options\n   */\n  async fetch( url, options = {} ) {\n    const {\n      headers,\n      signal = this.controller.signal,\n      parseJson = true\n    } = options;\n\n    // 默认 headers\n    options.headers = {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"text/event-stream\",\n      ...headers,\n    };\n\n    try {\n      const response = await fetch(url, {\n        signal,\n        ...options,\n      });\n\n      // 响应异常\n      if (!response.ok) {\n        const contentType = response.headers.get('content-type');\n        const ACCEPT = options.headers['Accept'];\n        if (!String(contentType).startsWith(ACCEPT)) {\n          console.error(`Expected content-type to be ${ACCEPT}, Actual: ${contentType}`);\n        }\n        throw new Error(`HTTP ${response.status}`);\n      }\n\n      options.onOpen?.(response);\n\n      // 读取流\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      async function readStream() {\n        const { done, value } = await reader.read();\n\n        // DONE\n        if (done) return options.done?.(response);\n\n        const chunk = decoder.decode(value); // 解码 Uint8Array\n        eventsourceParser(chunk, options.onMessage, { instance: this, parseJson }); // 解析 SSE 数据格式\n\n        readStream();\n      }\n      readStream();\n    } catch(error) {\n      this.abort();\n      delete this.buffer;\n      options.onError?.(error);\n    }\n  }\n\n  // 中断请求\n  abort() {\n    this.controller.abort();\n  }\n}\n\n// 创建实例\nexport async function fetchEventSource(...args) {\n  const eventSource = new FetchEventSource();\n  await eventSource.fetch(...args);\n  return eventSource;\n};\n\nexport { eventsourceParser };\n"],"names":["eventsourceParser","chunk","callback","options","message","instance","parseJson","buffer","lines","split","pop","forEach","item","index","trim","data","JSON","parse","e","fieleLength","indexOf","field","substring","value","test","parseInt","FetchEventSource","constructor","controller","AbortController","fetch","url","headers","signal","response","ok","contentType","get","ACCEPT","String","startsWith","console","error","Error","status","onOpen","reader","body","getReader","decoder","TextDecoder","readStream","done","read","decode","onMessage","abort","onError","fetchEventSource","args","eventSource"],"mappings":"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"}