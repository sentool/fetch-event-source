{"version":3,"file":"index.js","sources":["../src/parse.js","../src/fetch.js"],"sourcesContent":["/**\n * SSE 文本解析\n * @param {string} chunk - decode 后的 SSE 格式数据块\n * @param {Function} callback\n * @param {Object} instance\n */\nfunction eventsourceParser(chunk, callback, options = {}) {\n  let message = {};\n  const {\n    instance = eventsourceParser,\n    parseJson = true\n  } = options;\n  const buffer = (instance.buffer || '') + chunk;\n  const lines = buffer.split('\\n');\n\n  // SSE 规范要求每个事件使用空行即 \\n\\n 进行分割\n  // 移除最后一行，若事件完整则为空行，若事件不完整则留作下次处理\n  instance.buffer = lines.pop();\n\n  // 解析原始数据\n  lines.forEach((item, index) => {\n    // 空行表示一个完整事件的结束\n    if (item.trim() === '') {\n      // 是否自动解析 JSON\n      if (parseJson) {\n        try {\n          message.data = JSON.parse(message.data);\n        } catch(e) {}\n      }\n      callback?.(message, index); // 返回数据\n      message = {}; // 重置事件返回的数据\n    } else {\n      const fieleLength = item.indexOf(':');\n      const field = item.substring(0, fieleLength);\n      const value = item.substring(fieleLength + 1);\n\n      // 处理数据\n      if (field.trim()) {\n        switch (field) {\n          case 'data':\n            message.data = value;\n            break;\n          default: // id, event, retry\n            message[field] = /^\\d+$/.test(value) ? parseInt(value) : value;\n        }\n      }\n    }\n  });\n};\n\nexport default eventsourceParser;\n","import eventsourceParser from './parse.js';\n\nclass FetchEventSource {\n  constructor() {\n    this.controller = new AbortController();\n  }\n\n  /**\n   * 发起请求\n   * @param {string} url\n   * @param {Object} options\n   */\n  async fetch( url, options = {} ) {\n    const {\n      headers,\n      signal = this.controller.signal,\n      parseJson = true\n    } = options;\n\n    // 默认 headers\n    options.headers = {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"text/event-stream\",\n      ...headers,\n    };\n\n    try {\n      const response = await fetch(url, {\n        signal,\n        ...options,\n      });\n\n      // 响应异常\n      if (!response.ok) {\n        const contentType = response.headers.get('content-type');\n        const ACCEPT = options.headers['Accept'];\n        if (!String(contentType).startsWith(ACCEPT)) {\n          console.error(`Expected content-type to be ${ACCEPT}, Actual: ${contentType}`);\n        }\n        throw new Error(`HTTP ${response.status}`);\n      }\n\n      options.onOpen?.(response);\n\n      // 读取流\n      const reader = response.body.getReader();\n      const decoder = new TextDecoder();\n      async function readStream() {\n        const { done, value } = await reader.read();\n\n        // DONE\n        if (done) return options.done?.(response);\n\n        const chunk = decoder.decode(value); // 解码 Uint8Array\n        eventsourceParser(chunk, options.onMessage, { instance: this, parseJson }); // 解析 SSE 数据格式\n\n        readStream();\n      }\n      readStream();\n    } catch(error) {\n      this.abort();\n      delete this.buffer;\n      options.onError?.(error);\n    }\n  }\n\n  // 中断请求\n  abort() {\n    this.controller.abort();\n  }\n}\n\n// 创建实例\nexport async function fetchEventSource(...args) {\n  const eventSource = new FetchEventSource();\n  await eventSource.fetch(...args);\n  return eventSource;\n};\n\nexport { eventsourceParser };\n"],"names":["eventsourceParser","chunk","callback","options","message","instance","parseJson","buffer","lines","split","pop","forEach","item","index","trim","data","JSON","parse","e","fieleLength","indexOf","field","substring","value","test","parseInt","FetchEventSource","constructor","controller","AbortController","fetch","url","headers","signal","response","ok","contentType","get","ACCEPT","String","startsWith","console","error","Error","status","onOpen","reader","body","getReader","decoder","TextDecoder","readStream","done","read","decode","onMessage","abort","onError","fetchEventSource","args","eventSource"],"mappings":";;;;;;EAAA;EACA;EACA;EACA;EACA;EACA;EACA,SAASA,iBAAiBA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,GAAG,EAAE,EAAE;IACxD,IAAIC,OAAO,GAAG,EAAE,CAAA;IAChB,MAAM;EACJC,IAAAA,QAAQ,GAAGL,iBAAiB;EAC5BM,IAAAA,SAAS,GAAG,IAAA;EACd,GAAC,GAAGH,OAAO,CAAA;IACX,MAAMI,MAAM,GAAG,CAACF,QAAQ,CAACE,MAAM,IAAI,EAAE,IAAIN,KAAK,CAAA;EAC9C,EAAA,MAAMO,KAAK,GAAGD,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC,CAAA;;EAEhC;EACA;EACAJ,EAAAA,QAAQ,CAACE,MAAM,GAAGC,KAAK,CAACE,GAAG,EAAE,CAAA;;EAE7B;EACAF,EAAAA,KAAK,CAACG,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC7B;EACA,IAAA,IAAID,IAAI,CAACE,IAAI,EAAE,KAAK,EAAE,EAAE;EACtB;EACA,MAAA,IAAIR,SAAS,EAAE;UACb,IAAI;YACFF,OAAO,CAACW,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACb,OAAO,CAACW,IAAI,CAAC,CAAA;EACzC,SAAC,CAAC,OAAMG,CAAC,EAAE,EAAC;EACd,OAAA;EACAhB,MAAAA,QAAQ,GAAGE,OAAO,EAAES,KAAK,CAAC,CAAC;EAC3BT,MAAAA,OAAO,GAAG,EAAE,CAAC;EACf,KAAC,MAAM;EACL,MAAA,MAAMe,WAAW,GAAGP,IAAI,CAACQ,OAAO,CAAC,GAAG,CAAC,CAAA;QACrC,MAAMC,KAAK,GAAGT,IAAI,CAACU,SAAS,CAAC,CAAC,EAAEH,WAAW,CAAC,CAAA;QAC5C,MAAMI,KAAK,GAAGX,IAAI,CAACU,SAAS,CAACH,WAAW,GAAG,CAAC,CAAC,CAAA;;EAE7C;EACA,MAAA,IAAIE,KAAK,CAACP,IAAI,EAAE,EAAE;EAChB,QAAA,QAAQO,KAAK;EACX,UAAA,KAAK,MAAM;cACTjB,OAAO,CAACW,IAAI,GAAGQ,KAAK,CAAA;EACpB,YAAA,MAAA;EACF,UAAA;EAAS;EACPnB,YAAAA,OAAO,CAACiB,KAAK,CAAC,GAAG,OAAO,CAACG,IAAI,CAACD,KAAK,CAAC,GAAGE,QAAQ,CAACF,KAAK,CAAC,GAAGA,KAAK,CAAA;EAClE,SAAA;EACF,OAAA;EACF,KAAA;EACF,GAAC,CAAC,CAAA;EACJ;;EC9CA,MAAMG,gBAAgB,CAAC;EACrBC,EAAAA,WAAWA,GAAG;EACZ,IAAA,IAAI,CAACC,UAAU,GAAG,IAAIC,eAAe,EAAE,CAAA;EACzC,GAAA;;EAEA;EACF;EACA;EACA;EACA;IACE,MAAMC,KAAKA,CAAEC,GAAG,EAAE5B,OAAO,GAAG,EAAE,EAAG;MAC/B,MAAM;QACJ6B,OAAO;EACPC,MAAAA,MAAM,GAAG,IAAI,CAACL,UAAU,CAACK,MAAM;EAC/B3B,MAAAA,SAAS,GAAG,IAAA;EACd,KAAC,GAAGH,OAAO,CAAA;;EAEX;MACAA,OAAO,CAAC6B,OAAO,GAAG;EAChB,MAAA,cAAc,EAAE,kBAAkB;EAClC,MAAA,QAAQ,EAAE,mBAAmB;QAC7B,GAAGA,OAAAA;OACJ,CAAA;MAED,IAAI;EACF,MAAA,MAAME,QAAQ,GAAG,MAAMJ,KAAK,CAACC,GAAG,EAAE;UAChCE,MAAM;UACN,GAAG9B,OAAAA;EACL,OAAC,CAAC,CAAA;;EAEF;EACA,MAAA,IAAI,CAAC+B,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAMC,WAAW,GAAGF,QAAQ,CAACF,OAAO,CAACK,GAAG,CAAC,cAAc,CAAC,CAAA;EACxD,QAAA,MAAMC,MAAM,GAAGnC,OAAO,CAAC6B,OAAO,CAAC,QAAQ,CAAC,CAAA;UACxC,IAAI,CAACO,MAAM,CAACH,WAAW,CAAC,CAACI,UAAU,CAACF,MAAM,CAAC,EAAE;YAC3CG,OAAO,CAACC,KAAK,CAAC,CAAA,4BAAA,EAA+BJ,MAAM,CAAaF,UAAAA,EAAAA,WAAW,EAAE,CAAC,CAAA;EAChF,SAAA;UACA,MAAM,IAAIO,KAAK,CAAC,CAAA,KAAA,EAAQT,QAAQ,CAACU,MAAM,EAAE,CAAC,CAAA;EAC5C,OAAA;EAEAzC,MAAAA,OAAO,CAAC0C,MAAM,GAAGX,QAAQ,CAAC,CAAA;;EAE1B;QACA,MAAMY,MAAM,GAAGZ,QAAQ,CAACa,IAAI,CAACC,SAAS,EAAE,CAAA;EACxC,MAAA,MAAMC,OAAO,GAAG,IAAIC,WAAW,EAAE,CAAA;QACjC,eAAeC,UAAUA,GAAG;UAC1B,MAAM;YAAEC,IAAI;EAAE7B,UAAAA,KAAAA;EAAM,SAAC,GAAG,MAAMuB,MAAM,CAACO,IAAI,EAAE,CAAA;;EAE3C;UACA,IAAID,IAAI,EAAE,OAAOjD,OAAO,CAACiD,IAAI,GAAGlB,QAAQ,CAAC,CAAA;UAEzC,MAAMjC,KAAK,GAAGgD,OAAO,CAACK,MAAM,CAAC/B,KAAK,CAAC,CAAC;EACpCvB,QAAAA,iBAAiB,CAACC,KAAK,EAAEE,OAAO,CAACoD,SAAS,EAAE;EAAElD,UAAAA,QAAQ,EAAE,IAAI;EAAEC,UAAAA,SAAAA;WAAW,CAAC,CAAC;;EAE3E6C,QAAAA,UAAU,EAAE,CAAA;EACd,OAAA;EACAA,MAAAA,UAAU,EAAE,CAAA;OACb,CAAC,OAAMT,KAAK,EAAE;QACb,IAAI,CAACc,KAAK,EAAE,CAAA;QACZ,OAAO,IAAI,CAACjD,MAAM,CAAA;EAClBJ,MAAAA,OAAO,CAACsD,OAAO,GAAGf,KAAK,CAAC,CAAA;EAC1B,KAAA;EACF,GAAA;;EAEA;EACAc,EAAAA,KAAKA,GAAG;EACN,IAAA,IAAI,CAAC5B,UAAU,CAAC4B,KAAK,EAAE,CAAA;EACzB,GAAA;EACF,CAAA;;EAEA;EACO,eAAeE,gBAAgBA,CAAC,GAAGC,IAAI,EAAE;EAC9C,EAAA,MAAMC,WAAW,GAAG,IAAIlC,gBAAgB,EAAE,CAAA;EAC1C,EAAA,MAAMkC,WAAW,CAAC9B,KAAK,CAAC,GAAG6B,IAAI,CAAC,CAAA;EAChC,EAAA,OAAOC,WAAW,CAAA;EACpB;;;;;;;;;"}